; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-pc-win32-msvc-elf -mattr=avx512fp16 | FileCheck %s

define void @test() #3 {
; CHECK-LABEL: test:
; CHECK:       # %bb.0: # %wrapper_entry
; CHECK-NEXT:    xorl %eax, %eax
; CHECK-NEXT:    vcvtps2phx %zmm0, %ymm0
; CHECK-NEXT:    vmovdqa64 {{.*#+}} zmm1 = [0,4294967295,4294967294,4294967293,4294967292,4294967291,4294967290,4294967289,4294967288,4294967287,4294967286,4294967285,4294967284,4294967283,4294967282,4294967281]
; CHECK-NEXT:    .p2align 4, 0x90
; CHECK-NEXT:  .LBB0_1: # %SyncBB10
; CHECK-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    vpbroadcastd %eax, %zmm2
; CHECK-NEXT:    vpcmpeqd %zmm1, %zmm2, %k1
; CHECK-NEXT:    vmovaps %ymm0, %ymm2
; CHECK-NEXT:    vmaxph {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to16}, %ymm0, %ymm2 {%k1}
; CHECK-NEXT:    addl $16, %eax
; CHECK-NEXT:    jmp .LBB0_1
wrapper_entry:
  %broadcast.splat = shufflevector <16 x i1> poison, <16 x i1> poison, <16 x i32> zeroinitializer
  br label %SyncBB10

SyncBB10:                                         ; preds = %SyncBB10, %wrapper_entry
  %0 = phi <16 x half> [ <half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00>, %wrapper_entry ], [ %12, %SyncBB10 ]
  %LocalId_0178180 = phi i64 [ 0, %wrapper_entry ], [ %13, %SyncBB10 ]
  %sg.size.zext = select i1 poison, i64 16, i64 poison
  %.splatinsert = insertelement <16 x i64> poison, i64 %sg.size.zext, i64 0
  %.splat = shufflevector <16 x i64> %.splatinsert, <16 x i64> poison, <16 x i32> zeroinitializer
  %mask.i1 = icmp ugt <16 x i64> %.splat, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %1 = trunc i64 %LocalId_0178180 to i32
  %broadcast.splatinsert4 = insertelement <16 x i32> poison, i32 %1, i64 0
  %broadcast.splat5 = shufflevector <16 x i32> %broadcast.splatinsert4, <16 x i32> poison, <16 x i32> zeroinitializer
  %2 = fptrunc <16 x float> poison to <16 x half>
  %3 = select <16 x i1> %mask.i1, <16 x i1> %broadcast.splat, <16 x i1> zeroinitializer
  %4 = icmp eq <16 x i32> %broadcast.splat5, <i32 0, i32 -1, i32 -2, i32 -3, i32 -4, i32 -5, i32 -6, i32 -7, i32 -8, i32 -9, i32 -10, i32 -11, i32 -12, i32 -13, i32 -14, i32 -15>
  %5 = fcmp ogt <16 x half> %2, <half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140>
  %6 = select <16 x i1> %5, <16 x half> %2, <16 x half> <half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140, half 0xH5140>
  %7 = select <16 x i1> %4, <16 x half> %6, <16 x half> %2
  %astype3.i25 = select <16 x i1> %3, <16 x half> %7, <16 x half> <half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00, half 0xHFC00>
  %8 = extractelement <16 x half> %0, i64 15
  %9 = insertelement <16 x half> %0, half poison, i64 0
  %10 = extractelement <16 x half> %astype3.i25, i64 14
  %narrow.sel1.i139.i84 = select contract i1 poison, half poison, half %10
  %narrow.sel.i140.i85 = select contract i1 false, half %narrow.sel1.i139.i84, half poison
  %11 = insertelement <16 x half> poison, half %narrow.sel.i140.i85, i64 14
  %12 = insertelement <16 x half> %11, half poison, i64 15
  %13 = add nuw i64 %LocalId_0178180, 16
  br label %SyncBB10
}
